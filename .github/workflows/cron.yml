#!/usr/bin/env python3
import json
import os
import sys
import psycopg2

def inspect_data_processing():
    """Inspect the data processing pipeline"""
    try:
        # Check if data file exists
        if not os.path.exists('top_miniapps.json'):
            print("❌ top_miniapps.json file not found!")
            return False
        
        # Load and inspect data
        with open('top_miniapps.json', 'r') as f:
            data = json.load(f)
        
        print(f"✅ Successfully loaded {len(data)} records from top_miniapps.json")
        
        # Show sample data structure
        if data:
            print("\nSample record structure:")
            sample = data[0]
            print(f"Keys: {list(sample.keys())}")
            if 'miniApp' in sample:
                print(f"MiniApp keys: {list(sample['miniApp'].keys())}")
        
        # Test database connection
        db_url = os.environ.get('NEON_DB_URL')
        if not db_url:
            print("❌ NEON_DB_URL not set!")
            return False
        
        conn = psycopg2.connect(db_url)
        cur = conn.cursor()
        
        print(f"✅ Database connection established")
        
        # Check if table exists
        cur.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'miniapps_ranking'
            );
        """)
        table_exists = cur.fetchone()[0]
        print(f"Table 'miniapps_ranking' exists: {table_exists}")
        
        if table_exists:
            # Check current record count
            cur.execute("SELECT COUNT(*) FROM miniapps_ranking;")
            count = cur.fetchone()[0]
            print(f"Current records in database: {count}")
        
        cur.close()
        conn.close()
        
        print("✅ Data processing inspection completed successfully!")
        return True
        
    except Exception as e:
        print(f"❌ Error during inspection: {e}")
        return False

if __name__ == "__main__":
    success = inspect_data_processing()
    if not success:
        sys.exit(1)
